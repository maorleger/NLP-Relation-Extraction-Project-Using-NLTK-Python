Final project for NLP.

Instructions:
System Project: For a system project, you are expected to implement an NLP program that is somewhat more ambitious than any of the homework projects. 
First, you should aim to produce baseline system: a simple system that you can be fairly confident will produce a measurable result. This system should be as simple as possible. It should proves the feasibility of your plan. However, the results from this system do not need to be very high quality.
You should conduct a series of experiments which may or may not improve your system.  These experiments can be more ambitious. You should try to learn from your results and revise your experiments as you go. If you methodically follow a line of reasoning in your experiments, but do not ultimately have an improvement over your baseline system, that is actually OK. Good results are nice, but we are also looking for good methodology in your experimentation.
Your system can be based on manual rules, machine learning (or similar methods), or some combination.
Write a report which includes: a) a system description; b) results and analysis of results; c) compares your work with previous work.
Submit the report and your final system, along with any data and instructions, so your system can be tested.

README

pre-requisites:
1. python2.6 or higher with NLTK installed

2. The following data should be available to NLTK: maxent_ne_chunker, words, and wordnet
	To install the above data enter the following in order into a terminal window:
	python2.6
	import nltk
	nltk.download()
	d maxent_ne_chunker
	d words
	d wordnet
	q
	CTRL + d (to exit Python console)
3. The following files and folders should be available (assuming you are in the project's directory):
	1. ./project.py
	2. ./project_scorer.py
	3. ./MaxEntCreatModel.jar
	4. ./MaxEntPredict.jar
	5. ./data/training

running:
1. cd into the project's root directory and type the following into a terminal windows:
2. project:
	python2.6 project.py [-v] testingFileName outputFileName
	where testingFileName is the relative path to the testing file and outputFileName is the desired name of the output file
3. scorer:
	python2.6 project_scorer [-v] outputFileName
	where outputFileName is the relative path to the file just created in step (2)
ex:
cd ~/school/NLP/project
python2.6 project.py -v data/dev data/output
python2.6 project_scorer.py data/output





